<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>